
#words.py
import os
from math import ceil
from datetime import datetime, timedelta
from aiogram import types, Dispatcher, Bot
from database import crud
from utils.helpers import load_words_for_level  # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ª–æ–≤–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è –∏–∑ —Ñ–∞–π–ª–æ–≤ levels/<level>.txt
from keyboards.submenus import words_day_keyboard

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (FT –∏ DT)
FIRST_TIME = "02:19"      # –í—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (FT)
DURATION_HOURS = 1       # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (DT) ‚Äì –æ—Ç FT –¥–æ FT+DT (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10:00‚Äì22:00)

def compute_notification_times(Y):
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ Y –≤—Ä–µ–º—ë–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    –ü–æ —Ñ–æ—Ä–º—É–ª–µ: T‚Çô = FT + (n-1) ¬∑ (DT / Y)
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "HH:MM".
    """
    base = datetime.strptime(FIRST_TIME, "%H:%M")
    interval = timedelta(hours=DURATION_HOURS / Y)
    times = []
    for n in range(Y):
        t = base + n * interval
        times.append(t.strftime("%H:%M"))
    return times

def distribute_word_messages_cyclic(words_list, Y):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ words_list –¥–ª–∏–Ω–æ–π T = 3*X (–∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–æ 3 —Ä–∞–∑–∞).
    –í—ã—á–∏—Å–ª—è–µ—Ç N = ceil(T / Y) ‚Äì —á–∏—Å–ª–æ —Å–ª–æ–≤ –≤ –∫–∞–∂–¥–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏.
    –î–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∏–Ω–¥–µ–∫—Å–æ–º i (0-based) –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞:
         words_list[(i*N + j) mod T],  j = 0..N-1.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ Y —Å—Ç—Ä–æ–∫, –≥–¥–µ –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    """
    T = len(words_list)
    N = ceil(T / Y)
    messages = []
    for i in range(Y):
        msg_words = [words_list[(i * N + j) % T] for j in range(N)]
        messages.append("\n".join(f"üîπ {word}" for word in msg_words))
    return messages

async def send_words_day_schedule(callback: types.CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–ª–æ–≤–∞ –¥–Ω—è".
    –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: X (words_per_day) –∏ Y (notifications),
    –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–≤—ã–µ X —Å–ª–æ–≤ –¥–ª—è –µ–≥–æ —É—Ä–æ–≤–Ω—è, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ 3*X —Å–ª–æ–≤,
    —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Ö —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –ø–æ Y —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º (–∫–∞–∂–¥–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ceil(3X/Y) —Å–ª–æ–≤),
    –≤—ã—á–∏—Å–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ñ–æ—Ä–º—É–ª–µ T‚Çô = FT + (n-1)*(DT/Y)
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    chat_id = callback.from_user.id
    user = crud.get_user(chat_id)
    if not user:
        await bot.send_message(chat_id, "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —É—Ä–æ–≤–µ–Ω—å, X –∏ Y
    _, level, words_per_day, notifications, _ = user
    X = words_per_day
    Y = notifications

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–æ–≤–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è (–±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ X —Å–ª–æ–≤)
    words = load_words_for_level(level)
    if not words:
        await bot.send_message(chat_id, f"‚ö†Ô∏è –ù–µ—Ç —Å–ª–æ–≤ –¥–ª—è —É—Ä–æ–≤–Ω—è {level}.")
        return
    selected_words = words[:X]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ 3*X —Å–ª–æ–≤ (–∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è 3 —Ä–∞–∑–∞)
    words_repeated = selected_words * 3

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ–≤–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –ø–æ Y —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
    messages = distribute_word_messages_cyclic(words_repeated, Y)
    times = compute_notification_times(Y)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    text = "üìå –°–µ–≥–æ–¥–Ω—è –≤–∞–º –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Å–ª–æ–≤–∞:\n\n"
    for i in range(Y):
        t = times[i]
        msg = messages[i] if messages[i] else "(–Ω–µ—Ç —Å–ª–æ–≤)"
        text += f"‚è∞ {t}:\n{msg}\n\n"
    text += "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."

    await bot.send_message(chat_id, text, reply_markup=words_day_keyboard())
    await callback.answer()

def register_words_handlers(dp: Dispatcher, bot: Bot):
    dp.register_callback_query_handler(
        lambda c: send_words_day_schedule(c, bot),
        lambda c: c.data == "menu:words_day"
    )