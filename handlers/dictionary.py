# handlers/dictionary.py
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ¬´–ú–æ–π —Å–ª–æ–≤–∞—Ä—å¬ª:
 ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—ã—É—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
 ‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏
 ‚Ä¢ –û—á–∏—Å—Ç–∫–∞ —Å–ª–æ–≤–∞—Ä—è
 ‚Ä¢ –û—Ç–º–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∏
"""

import logging
from functools import partial

from aiogram import Bot, Dispatcher, types

from database import crud
from keyboards.submenus import dictionary_menu_keyboard, clear_dictionary_confirm_keyboard
from keyboards.reply_keyboards import get_main_menu_keyboard
from utils.sticker_helper import send_sticker_with_menu, get_clean_sticker
from utils.visual_helpers import format_dictionary_message

logger = logging.getLogger(__name__)


async def show_dictionary(callback: types.CallbackQuery, bot: Bot):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Å–ª–æ–≤–∞—Ä–µ."""
    chat_id = callback.from_user.id
    learned = crud.get_learned_words(chat_id)

    if not learned:
        text = (
            "üìö *–í–∞—à —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç*\n\n"
            "–ü—Ä–æ–π–¥–∏—Ç–µ –∫–≤–∏–∑—ã, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –≤ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä—å!"
        )
    else:
        text = format_dictionary_message(learned)

    await callback.message.edit_text(
        text,
        parse_mode="Markdown",
        reply_markup=dictionary_menu_keyboard()
    )
    await callback.answer()


async def confirm_clear(callback: types.CallbackQuery, bot: Bot):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ–≤–∞—Ä—è."""
    await callback.message.edit_text(
        "‚ö†Ô∏è *–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å?*\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –≤—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        parse_mode="Markdown",
        reply_markup=clear_dictionary_confirm_keyboard()
    )
    await callback.answer()


async def clear_dictionary(callback: types.CallbackQuery, bot: Bot):
    """–û—á–∏—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    chat_id = callback.from_user.id
    try:
        crud.clear_learned_words_for_user(chat_id)
        # –°—Ç–∏–∫–µ—Ä + –º–µ–Ω—é
        await send_sticker_with_menu(chat_id, bot, get_clean_sticker())
        await bot.send_message(
            chat_id,
            "–°–ª–æ–≤–∞—Ä—å —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω.",
            reply_markup=get_main_menu_keyboard()
        )
    except Exception as e:
        logger.error("Error clearing dictionary for user %s: %s", chat_id, e)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å–ª–æ–≤–∞—Ä—è —Å –æ—à–∏–±–∫–æ–π
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–ª–æ–≤–∞—Ä—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="Markdown",
            reply_markup=dictionary_menu_keyboard()
        )
    await callback.answer()


async def cancel_clear(callback: types.CallbackQuery, bot: Bot):
    """–û—Ç–º–µ–Ω—è–µ—Ç –æ—á–∏—Å—Ç–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å–ª–æ–≤–∞—Ä—è."""
    await show_dictionary(callback, bot)
    await callback.answer("–û—á–∏—Å—Ç–∫–∞ —Å–ª–æ–≤–∞—Ä—è –æ—Ç–º–µ–Ω–µ–Ω–∞")


def register_dictionary_handlers(dp: Dispatcher, bot: Bot):
    dp.register_callback_query_handler(
        partial(show_dictionary, bot=bot),
        lambda c: c.data == "menu:dictionary"
    )
    dp.register_callback_query_handler(
        partial(confirm_clear, bot=bot),
        lambda c: c.data == "dictionary:clear_confirm"
    )
    dp.register_callback_query_handler(
        partial(clear_dictionary, bot=bot),
        lambda c: c.data == "dictionary:clear_confirmed"
    )
    dp.register_callback_query_handler(
        partial(cancel_clear, bot=bot),
        lambda c: c.data == "dictionary:clear_cancel"
    )
