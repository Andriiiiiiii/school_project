# Updated dictionary handlers in handlers/dictionary.py

from aiogram import types, Dispatcher, Bot
from keyboards.submenus import dictionary_menu_keyboard, clear_dictionary_confirm_keyboard
from database import crud
from functools import partial
from utils.visual_helpers import format_dictionary_message
from utils.sticker_helper import get_clean_sticker

async def handle_dictionary(callback: types.CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π —Å–ª–æ–≤–∞—Ä—å". –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
    """
    chat_id = callback.from_user.id
    learned = crud.get_learned_words(chat_id)
    
    if not learned:
        await bot.send_message(
            chat_id, 
            "üìö *–í–∞—à —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç*\n\n–ü—Ä–æ–π–¥–∏—Ç–µ –∫–≤–∏–∑—ã, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –≤ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä—å!",
            parse_mode="Markdown",
            reply_markup=dictionary_menu_keyboard()
        )
    else:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è
        formatted_message = format_dictionary_message(learned)
        
        await bot.send_message(
            chat_id, 
            formatted_message,
            parse_mode="Markdown", 
            reply_markup=dictionary_menu_keyboard()
        )
    
    await callback.answer()

async def handle_clear_dictionary_confirm(callback: types.CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ–≤–∞—Ä—è. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    chat_id = callback.from_user.id
    
    await bot.send_message(
        chat_id,
        "‚ö†Ô∏è *–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å?*\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –≤—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        parse_mode="Markdown",
        reply_markup=clear_dictionary_confirm_keyboard()
    )
    
    await callback.answer()

async def handle_clear_dictionary_confirmed(callback: types.CallbackQuery, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ–≤–∞—Ä—è."""
    chat_id = callback.from_user.id
    
    try:
        # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        crud.clear_learned_words_for_user(chat_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ–≤–∞—Ä—è
        sticker_id = get_clean_sticker()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∏–∫–µ—Ä –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
        if sticker_id:
            await bot.send_sticker(chat_id, sticker_id)
        
        await bot.send_message(
            chat_id,
            "‚úÖ –í–∞—à —Å–ª–æ–≤–∞—Ä—å —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω.",
            parse_mode="Markdown",
            reply_markup=dictionary_menu_keyboard()
        )
        
    except Exception as e:
        logger.error(f"Error clearing dictionary for user {chat_id}: {e}")
        await bot.send_message(
            chat_id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–ª–æ–≤–∞—Ä—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="Markdown",
            reply_markup=dictionary_menu_keyboard()
        )
    
    await callback.answer()

async def handle_clear_dictionary_cancelled(callback: types.CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ–≤–∞—Ä—è. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å–ª–æ–≤–∞—Ä—è.
    """
    chat_id = callback.from_user.id
    
    await handle_dictionary(callback, bot)
    await callback.answer("–û—á–∏—Å—Ç–∫–∞ —Å–ª–æ–≤–∞—Ä—è –æ—Ç–º–µ–Ω–µ–Ω–∞")

def register_dictionary_handlers(dp: Dispatcher, bot: Bot):
    dp.register_callback_query_handler(
        partial(handle_dictionary, bot=bot),
        lambda c: c.data == "menu:dictionary"
    )
    dp.register_callback_query_handler(
        partial(handle_clear_dictionary_confirm, bot=bot),
        lambda c: c.data == "dictionary:clear_confirm"
    )
    dp.register_callback_query_handler(
        partial(handle_clear_dictionary_confirmed, bot=bot),
        lambda c: c.data == "dictionary:clear_confirmed"
    )
    dp.register_callback_query_handler(
        partial(handle_clear_dictionary_cancelled, bot=bot),
        lambda c: c.data == "dictionary:clear_cancel"
    )