# handlers/referrals.py
import logging
from functools import partial
from urllib.parse import quote

from aiogram import Bot, Dispatcher, types

from config import BOT_TOKEN
from database import crud
from keyboards.referrals import referral_menu_keyboard

logger = logging.getLogger(__name__)

async def get_bot_username(bot: Bot):
    """–ü–æ–ª—É—á–∞–µ—Ç username –±–æ—Ç–∞ —á–µ—Ä–µ–∑ API."""
    try:
        bot_info = await bot.get_me()
        return bot_info.username or "AllHabitsTrackerBot"  # fallback –µ—Å–ª–∏ username None
    except Exception as e:
        logger.error(f"Error getting bot username: {e}")
        return "AllHabitsTrackerBot"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞


async def show_referral_menu(callback: types.CallbackQuery, bot: Bot):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã."""
    chat_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    referral_code = crud.set_user_referral_code(chat_id)
    referrals_count = crud.count_user_referrals(chat_id)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot_username = await get_bot_username(bot)
    referral_link = f"https://t.me/{bot_username}?start=ref_{referral_code}"
    
    text = (
        "üë• *–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π*\n\n"
        "üéÅ *–ó–∞ –∫–∞–∂–¥—ã—Ö 5 –¥—Ä—É–∑–µ–π –ø–æ–ª—É—á–∞–π –º–µ—Å—è—Ü Premium!*\n\n"
        f"üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: *{referrals_count}/5*\n"
        f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n`{referral_link}`\n\n"
        "üìã *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n"
        "1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏\n"
        "2. –î—Ä—É–∑—å—è –∑–∞–ø—É—Å–∫–∞—é—Ç –±–æ—Ç–∞ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n"
        "3. –ó–∞ –∫–∞–∂–¥—ã—Ö 5 –¥—Ä—É–∑–µ–π –ø–æ–ª—É—á–∞–µ—Ç–µ –º–µ—Å—è—Ü Premium\n\n"
    )
    
    if referrals_count >= 5:
        completed_rewards = referrals_count // 5
        text += f"üéâ *–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ {completed_rewards} –Ω–∞–≥—Ä–∞–¥!*\n"
        next_reward_progress = referrals_count % 5
        if next_reward_progress > 0:
            text += f"üìä –î–æ —Å–ª–µ–¥—É—é—â–µ–π –Ω–∞–≥—Ä–∞–¥—ã: {next_reward_progress}/5\n"
    else:
        text += f"üìä –î–æ –ø–µ—Ä–≤–æ–π –Ω–∞–≥—Ä–∞–¥—ã: {referrals_count}/5\n"
    
    await callback.message.edit_text(
        text,
        parse_mode="Markdown",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π Markdown
        reply_markup=referral_menu_keyboard()
    )
    await callback.answer()

async def show_referral_history(callback: types.CallbackQuery, bot: Bot):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π."""
    chat_id = callback.from_user.id
    referrals = crud.get_user_referrals(chat_id)
    
    if not referrals:
        text = "üë• *–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π*\n\n–í—ã –µ—â–µ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏."
    else:
        text = f"üë• *–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π*\n\n–í—Å–µ–≥–æ –¥—Ä—É–∑–µ–π: *{len(referrals)}*\n\n"
        
        for i, (referred_id, created_at, _) in enumerate(referrals[:10], 1):
            try:
                date = created_at.split('T')[0] if 'T' in created_at else created_at[:10]
                text += f"{i}. –î—Ä—É–≥ #{referred_id} ‚Äî {date}\n"
            except:
                text += f"{i}. –î—Ä—É–≥ #{referred_id}\n"
        
        if len(referrals) > 10:
            text += f"\n...–∏ –µ—â–µ {len(referrals) - 10} –¥—Ä—É–∑–µ–π"
    
    await callback.message.edit_text(
        text,
        parse_mode="Markdown",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π Markdown
        reply_markup=referral_menu_keyboard()
    )
    await callback.answer()

async def share_referral_link(callback: types.CallbackQuery, bot: Bot):
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏."""
    chat_id = callback.from_user.id
    referral_code = crud.set_user_referral_code(chat_id)
    bot_username = await get_bot_username(bot)
    referral_link = f"https://t.me/{bot_username}?start=ref_{referral_code}"
    
    share_text = (
        "üéì –ò–∑—É—á–∞–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!\n\n"
        "–ü–æ–ø—Ä–æ–±—É–π –∫—Ä—É—Ç–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞:\n"
        "‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–ª–æ–≤–∞\n"
        "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã\n"
        "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å\n"
        "‚Ä¢ –†–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏\n\n"
        f"–ü–æ–ø—Ä–æ–±—É–π –∑–¥–µ—Å—å: {referral_link}"
    )
    
    message_text = f"üì§ –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–∑–µ–π:\n\n{share_text}"
    
    await bot.send_message(
        chat_id,
        message_text,
        parse_mode=None  # –£–±–∏—Ä–∞–µ–º Markdown –ø–∞—Ä—Å–∏–Ω–≥
    )
    await callback.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏.")

def register_referral_handlers(dp: Dispatcher, bot: Bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã."""
    
    dp.register_callback_query_handler(
        partial(show_referral_menu, bot=bot),
        lambda c: c.data == "menu:referrals"
    )
    
    dp.register_callback_query_handler(
        partial(show_referral_history, bot=bot),
        lambda c: c.data == "referrals:history"
    )
    
    dp.register_callback_query_handler(
        partial(share_referral_link, bot=bot),
        lambda c: c.data == "referrals:share"
    )