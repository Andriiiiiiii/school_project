# quick_streak_check.py
import sys
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

load_dotenv()
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def quick_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞."""
    print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê STREAK –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê")
    print("=" * 50)
    
    try:
        from database import crud
        from services.payment import PaymentService
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π ID
        test_id = 777777
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        try:
            with crud.db_manager.transaction() as tx:
                tx.execute("DELETE FROM users WHERE chat_id = ?", (test_id,))
                tx.execute("DELETE FROM dictionary WHERE chat_id = ?", (test_id,))
                tx.execute("DELETE FROM learned_words WHERE chat_id = ?", (test_id,))
        except:
            pass
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        crud.add_user(test_id)
        print(f"   –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_id}")
        
        print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π...")
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ streak = 0
        crud.reset_user_streak(test_id)
        initial_streak, _ = crud.get_user_streak(test_id)
        print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π streak: {initial_streak}")
        
        # –¢–µ—Å—Ç CRUD
        streak1 = crud.increment_user_streak(test_id)
        print(f"   –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞: {streak1}")
        
        streak2 = crud.increment_user_streak(test_id)  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å
        print(f"   –ü–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞: {streak2}")
        
        assert streak1 == 1, f"–ü–µ—Ä–≤—ã–π –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –¥–∞—Ç—å 1, –ø–æ–ª—É—á–µ–Ω {streak1}"
        assert streak2 == 1, f"–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è 1, –ø–æ–ª—É—á–µ–Ω {streak2}"
        print("   ‚úÖ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        
        print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∏–¥–æ–∫...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        crud.update_user_streak(test_id, 15)
        discount_free = crud.calculate_streak_discount(test_id)
        print(f"   –°–∫–∏–¥–∫–∞ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (streak=15): {discount_free}%")
        assert discount_free == 0, f"–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∞—Ç—å —Å–∫–∏–¥–∫—É, –ø–æ–ª—É—á–µ–Ω–∞ {discount_free}%"
        
        # –î–µ–ª–∞–µ–º –ø—Ä–µ–º–∏—É–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∏–¥–∫–∏
        future = (datetime.now() + timedelta(days=30)).isoformat()
        crud.update_user_subscription(test_id, "premium", future, "test")
        
        discount15 = crud.calculate_streak_discount(test_id)
        print(f"   –°–∫–∏–¥–∫–∞ –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (streak=15): {discount15}%")
        
        crud.update_user_streak(test_id, 35)
        discount35 = crud.calculate_streak_discount(test_id)
        print(f"   –°–∫–∏–¥–∫–∞ –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (streak=35): {discount35}%")
        
        assert discount15 == 15, f"–°–∫–∏–¥–∫–∞ –∑–∞ 15 –¥–Ω–µ–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 15%, –ø–æ–ª—É—á–µ–Ω–∞ {discount15}%"
        assert discount35 == 30, f"–°–∫–∏–¥–∫–∞ –∑–∞ 35 –¥–Ω–µ–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 30%, –ø–æ–ª—É—á–µ–Ω–∞ {discount35}%"
        print("   ‚úÖ –†–∞—Å—á–µ—Ç —Å–∫–∏–¥–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω...")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º streak 20
        crud.update_user_streak(test_id, 20)
        price_info = PaymentService.calculate_discounted_price(test_id, 1)
        assert price_info['has_discount'], "–î–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–∫–∏–¥–∫–∞"
        assert price_info['discount_percent'] == 20, f"–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏: –æ–∂–∏–¥–∞–ª–æ—Å—å 20%, –ø–æ–ª—É—á–µ–Ω–æ {price_info['discount_percent']}%"
        print("   ‚úÖ –†–∞—Å—á–µ—Ç —Ü–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –û—á–∏—Å—Ç–∫–∞
        crud.update_user_subscription(test_id, "free")
        crud.reset_user_streak(test_id)
        
        print("\nüéâ –í–°–ï –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = quick_check()
    if not success:
        print("\nüí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: python test_streak_functionality.py")