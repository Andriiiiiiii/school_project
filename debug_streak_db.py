# debug_streak_db.py
import sys
import os
from dotenv import load_dotenv

load_dotenv()
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def debug_database():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –¥–∞–Ω–Ω—ã–µ –ë–î."""
    try:
        from database.db import db_manager
        from database import crud
        
        print("üîç –û–¢–õ–ê–î–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
        with db_manager.get_cursor() as cursor:
            cursor.execute("PRAGMA table_info(users)")
            columns = cursor.fetchall()
            
            print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:")
            for col in columns:
                print(f"   {col[1]} - {col[2]} (default: {col[4]})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã
            column_names = [col[1] for col in columns]
            required = ['days_streak', 'last_test_date']
            missing = [col for col in required if col not in column_names]
            
            if missing:
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–æ–ª–±—Ü—ã: {missing}")
                return False
            else:
                print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        test_id = 888888
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {test_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        try:
            crud.add_user(test_id)
            print(f"   –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_id}")
        except:
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        with db_manager.get_cursor() as cursor:
            cursor.execute("SELECT chat_id, days_streak, last_test_date FROM users WHERE chat_id = ?", (test_id,))
            result = cursor.fetchone()
            if result:
                print(f"   –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: chat_id={result[0]}, streak={result[1]}, date={result[2]}")
            else:
                print(f"   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
                return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL
        print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ SQL –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
        with db_manager.transaction() as tx:
            tx.execute("UPDATE users SET days_streak = ?, last_test_date = ? WHERE chat_id = ?", 
                      (10, "2025-06-03", test_id))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with db_manager.get_cursor() as cursor:
            cursor.execute("SELECT days_streak, last_test_date FROM users WHERE chat_id = ?", (test_id,))
            result = cursor.fetchone()
            if result:
                print(f"   –ü–æ—Å–ª–µ SQL –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: streak={result[0]}, date={result[1]}")
                if result[0] == 10 and result[1] == "2025-06-03":
                    print("   ‚úÖ –ü—Ä—è–º–æ–µ SQL –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                else:
                    print("   ‚ùå –ü—Ä—è–º–æ–µ SQL –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    return False
            else:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
                return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º CRUD —Ñ—É–Ω–∫—Ü–∏–∏
        print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD —Ñ—É–Ω–∫—Ü–∏–π...")
        crud.update_user_streak(test_id, 15, "2025-06-04")
        
        streak, date = crud.get_user_streak(test_id)
        print(f"   –ü–æ—Å–ª–µ CRUD –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: streak={streak}, date={date}")
        
        if streak == 15 and date == "2025-06-04":
            print("   ‚úÖ CRUD —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        else:
            print("   ‚ùå CRUD —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
            return False
        
        # –û—á–∏—Å—Ç–∫–∞
        with db_manager.transaction() as tx:
            tx.execute("DELETE FROM users WHERE chat_id = ?", (test_id,))
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ë–î –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏ –ë–î: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    debug_database()