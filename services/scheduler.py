#pathtofile/services/scheduler.py
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta
import asyncio
from aiogram import Bot
from zoneinfo import ZoneInfo
from database import crud
from utils.helpers import get_daily_words_for_user, daily_words_cache, daily_words_storage
from config import REMINDER_START, DURATION_HOURS, SERVER_TIMEZONE

FIRST_TIME = REMINDER_START  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ REMINDER_START

def scheduler_job(bot: Bot, loop: asyncio.AbstractEventLoop):
    """
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥:
      - –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–∫—É—â–µ–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è (SERVER_TIMEZONE) –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ –µ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è.
      - –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç (—á–∞—Å –∏ –º–∏–Ω—É—Ç–∞) —Å –æ–¥–Ω–æ–π –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –Ω–∞–±–æ—Ä–∞ —Å–ª–æ–≤,
        –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
      - –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–≤–Ω–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –º–æ–º–µ–Ω—Ç–æ–º (FIRST_TIME + DURATION_HOURS) (—Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ –º–∏–Ω—É—Ç),
        –∏ –Ω–∞–±–æ—Ä —Å–ª–æ–≤ –µ—â—ë –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æ –¥–Ω—è, —Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ –±–∞–∑—É (¬´–ú–æ–π —Å–ª–æ–≤–∞—Ä—å¬ª).
      - –ù–∞–±–æ—Ä —Å–ª–æ–≤ –¥–Ω—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–Ω—è (00:00 –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏).
    """
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ —Å —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º SERVER_TIMEZONE
    now_server = datetime.now(tz=ZoneInfo(SERVER_TIMEZONE))
    users = crud.get_all_users()
    for user in users:
        chat_id = user[0]
        level = user[1]
        words_count = user[2]
        repetitions = user[3]
        # –ü–æ–ª—É—á–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º "Europe/Moscow")
        user_tz = user[5] if len(user) > 5 and user[5] else "Europe/Moscow"
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        now_local = now_server.astimezone(ZoneInfo(user_tz))
        now_local_str = now_local.strftime("%H:%M")
        local_today_str = now_local.strftime("%Y-%m-%d")
        
        # –í—ã—á–∏—Å–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        local_base_obj = datetime.strptime(f"{local_today_str} {FIRST_TIME}", "%Y-%m-%d %H:%M").replace(tzinfo=ZoneInfo(user_tz))
        local_end_obj = local_base_obj + timedelta(hours=DURATION_HOURS)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–±–æ—Ä —Å–ª–æ–≤ (–∏–∑ –∫—ç—à–∞ –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π)
        result = get_daily_words_for_user(chat_id, level, words_count, repetitions,
                                           first_time=FIRST_TIME, duration_hours=DURATION_HOURS)
        if result is None:
            continue
        messages, times = result
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–¥–Ω–æ–π –∏–∑ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
        if now_local_str in times:
            notif_index = times.index(now_local_str)
            message_text = messages[notif_index] if notif_index < len(messages) else ""
            asyncio.run_coroutine_threadsafe(
                bot.send_message(chat_id, f"üìå –°–ª–æ–≤–∞ –¥–Ω—è:\n{message_text}"),
                loop
            )
        
        # –§–∏–∫—Å–∏—Ä—É–µ–º –Ω–∞–±–æ—Ä —Å–ª–æ–≤ —Ä–æ–≤–Ω–æ –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å local_end_obj (–ø–æ —á–∞—Å–∞–º –∏ –º–∏–Ω—É—Ç–∞–º)
        if now_local.hour == local_end_obj.hour and now_local.minute == local_end_obj.minute:
            # –§–∏–∫—Å–∏—Ä—É–µ–º –Ω–∞–±–æ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ –±—ã–ª –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–µ–≥–æ–¥–Ω—è
            if chat_id not in daily_words_storage or daily_words_storage[chat_id][0] != local_today_str:
                if chat_id in daily_words_cache:
                    _, messages, _, _, _, _, _, _ = daily_words_cache[chat_id]
                    unique_words = set(msg.replace("üîπ ", "") for msg in messages)
                    for word in unique_words:
                        crud.add_learned_word(chat_id, word, local_today_str)
                    daily_words_storage[chat_id] = daily_words_cache[chat_id]
                    # –ù–µ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ daily_words_cache, —á—Ç–æ–±—ã –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–ª–æ—Å—å daily_words_storage

        # –ï—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–æ –Ω–æ–≤–æ–µ —É—Ç—Ä–æ (00:00 –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏), –æ—á–∏—â–∞–µ–º –∫—ç—à –∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if now_local.hour == 0 and now_local.minute == 0:
            if chat_id in daily_words_cache:
                del daily_words_cache[chat_id]
            if chat_id in daily_words_storage:
                del daily_words_storage[chat_id]

def start_scheduler(bot: Bot, loop: asyncio.AbstractEventLoop):
    scheduler = AsyncIOScheduler()
    scheduler.add_job(scheduler_job, 'interval', minutes=1, args=[bot, loop])
    scheduler.start()
    return scheduler
