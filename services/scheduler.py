from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta
import asyncio
from aiogram import Bot
from database import crud
from utils.helpers import get_daily_words_for_user, daily_words_cache, daily_words_storage
from config import REMINDER_START, DURATION_HOURS

# REMINDER_START –∏ DURATION_HOURS –±–µ—Ä—É—Ç—Å—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
FIRST_TIME = REMINDER_START

# saved_today –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å daily_words_storage

def scheduler_job(bot: Bot, loop: asyncio.AbstractEventLoop):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º:
      - –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ —Å–µ—Ä–≤–µ—Ä—É –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
        –Ω–∞ –æ—Å–Ω–æ–≤–µ REMINDER_START –∏ DURATION_HOURS (–∑–¥–µ—Å—å, –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è).
      - –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–¥–æ –º–∏–Ω—É—Ç) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
      - –ö–æ–≥–¥–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è >= (REMINDER_START + DURATION_HOURS), –µ—Å–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–±–æ—Ä –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω
        (–Ω–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ daily_words_storage), —Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –∫—ç—à–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑—É (–±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤),
        –∏ –∫—ç—à –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –≤ daily_words_storage, —á—Ç–æ–±—ã –Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è –¥–æ 0:00.
    """
    now = datetime.now()
    now_str = now.strftime("%H:%M")
    today_str = now.strftime("%Y-%m-%d")
    base_obj = datetime.strptime(f"{today_str} {FIRST_TIME}", "%Y-%m-%d %H:%M")
    end_obj = base_obj + timedelta(hours=DURATION_HOURS)
    
    users = crud.get_all_users()
    for user in users:
        chat_id = user[0]
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã: user[2] = words_per_day, user[3] = repetitions
        result = get_daily_words_for_user(chat_id, user[1], user[2], user[3],
                                           first_time=FIRST_TIME, duration_hours=DURATION_HOURS)
        if result is None:
            continue
        messages, times = result
        if now_str in times:
            notif_index = times.index(now_str)
            message_text = messages[notif_index] if notif_index < len(messages) else ""
            asyncio.run_coroutine_threadsafe(
                bot.send_message(chat_id, f"üìå –°–ª–æ–≤–∞ –¥–Ω—è:\n{message_text}"),
                loop
            )
            break  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ –∑–∞–ø—É—Å–∫

    # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è >= –∫–æ–Ω—Ü–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, —Ñ–∏–∫—Å–∏—Ä—É–µ–º –Ω–∞–±–æ—Ä (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    if now >= end_obj:
        for user in users:
            chat_id = user[0]
            # –ï—Å–ª–∏ —É–∂–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –Ω–∞–±–æ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–µ–≥–æ–¥–Ω—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if chat_id in daily_words_storage and daily_words_storage[chat_id][0] == today_str:
                continue
            if chat_id in daily_words_cache:
                _, messages, _, _, _, _, _ = daily_words_cache[chat_id]
                unique_words = set(msg.replace("üîπ ", "") for msg in messages)
                for word in unique_words:
                    crud.add_learned_word(chat_id, word, today_str)
                # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –Ω–∞–±–æ—Ä –∏–∑ –∫—ç—à–∞ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è –¥–æ 0:00
                daily_words_storage[chat_id] = daily_words_cache[chat_id]
                # –ù–µ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ daily_words_cache, —á—Ç–æ–±—ã get_daily_words_for_user —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–ª daily_words_storage
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–¥–µ—Å—å

def start_scheduler(bot: Bot, loop: asyncio.AbstractEventLoop):
    scheduler = AsyncIOScheduler()
    scheduler.add_job(scheduler_job, 'interval', minutes=1, args=[bot, loop])
    scheduler.start()
    return scheduler
