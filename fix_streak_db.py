# fix_streak_db.py
import logging
from database.db import db_manager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def fix_streak_columns():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥."""
    try:
        with db_manager.get_cursor() as cursor:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ users
            cursor.execute("PRAGMA table_info(users)")
            result = cursor.fetchall()
            columns = [row[1] for row in result]
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü –µ—Å–ª–∏ –µ—Å—Ç—å
            if 'daily_streak' in columns:
                logger.info("–£–¥–∞–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü 'daily_streak'")
                # SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç DROP COLUMN, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
                with db_manager.transaction() as tx:
                    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –±–µ–∑ daily_streak
                    tx.execute('''
                        CREATE TABLE users_temp AS 
                        SELECT chat_id, level, words_per_day, notifications, reminder_time, 
                               timezone, chosen_set, test_words_count, memorize_words_count,
                               subscription_status, subscription_expires_at, subscription_payment_id
                        FROM users
                    ''')
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
                    tx.execute("DROP TABLE users")
                    
                    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                    tx.execute("ALTER TABLE users_temp RENAME TO users")
                    
                    logger.info("–£–¥–∞–ª–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü 'daily_streak'")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–ª–±—Ü–∞—Ö
            cursor.execute("PRAGMA table_info(users)")
            result = cursor.fetchall()
            columns = [row[1] for row in result]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã
            with db_manager.transaction() as tx:
                if 'days_streak' not in columns:
                    tx.execute("ALTER TABLE users ADD COLUMN days_streak INTEGER DEFAULT 0")
                    logger.info("–°—Ç–æ–ª–±–µ—Ü 'days_streak' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
                else:
                    logger.info("–°—Ç–æ–ª–±–µ—Ü 'days_streak' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    
                if 'last_test_date' not in columns:
                    tx.execute("ALTER TABLE users ADD COLUMN last_test_date TEXT DEFAULT NULL")
                    logger.info("–°—Ç–æ–ª–±–µ—Ü 'last_test_date' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
                else:
                    logger.info("–°—Ç–æ–ª–±–µ—Ü 'last_test_date' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    
        logger.info("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ streak –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.")
        return True
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–æ–ª–±—Ü–æ–≤: {e}")
        return False

def verify_streak_functionality():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥."""
    try:
        from database import crud
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        test_chat_id = 777777
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        try:
            crud.add_user(test_chat_id)
            logger.info(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_chat_id}")
        except:
            logger.info(f"–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_chat_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        logger.info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π streak...")
        
        # –°–±—Ä–æ—Å streak
        crud.reset_user_streak(test_chat_id)
        streak, date = crud.get_user_streak(test_chat_id)
        logger.info(f"–ü–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: streak={streak}, date={date}")
        
        # –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç streak
        new_streak = crud.increment_user_streak(test_chat_id)
        logger.info(f"–ü–æ—Å–ª–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞: streak={new_streak}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∏–¥–∫–∏
        discount = crud.calculate_streak_discount(test_chat_id)
        logger.info(f"–°–∫–∏–¥–∫–∞ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {discount}%")
        
        # –î–µ–ª–∞–µ–º –ø—Ä–µ–º–∏—É–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∏–¥–∫—É
        from datetime import datetime, timedelta
        future_date = (datetime.now() + timedelta(days=30)).isoformat()
        crud.update_user_subscription(test_chat_id, "premium", future_date, "test")
        
        discount = crud.calculate_streak_discount(test_chat_id)
        logger.info(f"–°–∫–∏–¥–∫–∞ –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {discount}%")
        
        # –û—á–∏—Å—Ç–∫–∞
        crud.update_user_subscription(test_chat_id, "free")
        
        logger.info("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ streak —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π streak: {e}")
        import traceback
        traceback.print_exc()
        return False

def update_db_init():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª database/db.py –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ streak."""
    print("üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ init_db() –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ streak...")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    try:
        with open('database/db.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç—Ä–æ–∫–∏ —Å–æ streak
        if 'days_streak INTEGER DEFAULT 0' in content:
            print("‚úÖ –°—Ç–æ–ª–±—Ü—ã streak —É–∂–µ –µ—Å—Ç—å –≤ init_db()")
            return True
        
        # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å subscription_payment_id –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –Ω–µ—ë
        old_line = 'subscription_payment_id TEXT DEFAULT NULL'
        new_lines = '''subscription_payment_id TEXT DEFAULT NULL,
                    days_streak INTEGER DEFAULT 0,
                    last_test_date TEXT DEFAULT NULL'''
        
        if old_line in content:
            updated_content = content.replace(old_line, new_lines)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with open('database/db.py', 'w', encoding='utf-8') as f:
                f.write(updated_content)
            
            print("‚úÖ –§–∞–π–ª database/db.py –æ–±–Ω–æ–≤–ª–µ–Ω")
            return True
        else:
            print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∑–∞–º–µ–Ω—ã –≤ database/db.py")
            return False
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ database/db.py: {e}")
        return False

if __name__ == '__main__':
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥...")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º init_db()
    update_db_init()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±—Ü—ã –ë–î
    if fix_streak_columns():
        print("‚úÖ –°—Ç–æ–ª–±—Ü—ã –ë–î –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        if verify_streak_functionality():
            print("üéâ –°–∏—Å—Ç–µ–º–∞ –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –ë–î")